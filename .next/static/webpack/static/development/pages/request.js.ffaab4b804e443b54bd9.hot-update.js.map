{"version":3,"file":"static/webpack/static/development/pages/request.js.ffaab4b804e443b54bd9.hot-update.js","sources":["webpack:///./pages/request.js"],"sourcesContent":["import Layout from '../components/layout/primaryLayout';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { withRouter } from 'next/router';\nimport Moment from '@date-io/moment';\nimport Options from '../src/options';\nimport {\n\tDatePicker,\n\tTimePicker,\n\tMuiPickersUtilsProvider,\n} from '@material-ui/pickers';\nimport { \n\tGrid,\n\tFormControl,\n\tInputLabel,\n\tSelect,\n\tMenuItem,\n\tOutlinedInput,\n\tFormHelperText,\n\tButton,\n\tSwitch\n} from '@material-ui/core';\n\nconst useStyles = makeStyles(theme => ({\n\troot: {\n\t  display: 'flex',\n\t  flexWrap: 'wrap',\n\t},\n\tformControl: {\n\t\tmarginTop: theme.spacing(4),\n\t\tminWidth: 120\n\t},\n\tselectEmpty: {\n\t  marginTop: theme.spacing(2),\n\t},\n}));\n\nconst Request = (props) => {\n\tconst { router } = props\n\tconst classes = useStyles();\n\tconst inputLabel = React.useRef(null);\n\tconst [selectedDate, setSelectedDate] = React.useState(new Date('NOW'));\n\tconst [labelWidth, setLabelWidth] = React.useState(0);\n\tconst [values, setValues] = React.useState({\n    \tlocation: undefined,\n    \tissue: undefined,\n\t});\n\tconst [state, setState] = React.useState({\n\t\tasap: false\n\t})\n\tReact.useEffect(() => {\n    \tsetLabelWidth(inputLabel.current.offsetWidth);\n  \t}, []);\n\n\tfunction handleChange(event) {\n    \tsetValues(oldValues => ({\n      \t\t...oldValues,\n      \t\t[event.target.name]: event.target.value,\n    \t}));\n\t}\n\n\tconst handleSwitchChange = name => event => {\n\t\tsetState({ ...state, [name]: event.target.checked });\n\t};\n\n\tfunction handleDateChange(date) {\n\t\tsetSelectedDate(date);\n\t}\n\n    console.log('router: ', router);\n\tconsole.log('state: ', state);\n\treturn (\n\t\t<Layout>\n\t\t\t<form className={classes.root} autoComplete='off'>\n\t\t\t\t<Grid item xs={12} alignContent='center' justify='center'>\n\t\t\t\t\t<FormControl fullWidth variant='outlined' className={classes.formControl}>\n\t\t\t\t\t\t<InputLabel ref={inputLabel} htmlFor='outlined-location-simple'>\n\t\t\t\t\t\t\tWhere\n\t\t\t\t\t\t</InputLabel>\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tvalue={values.location}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tinput={<OutlinedInput labelWidth={labelWidth} name='location' id='outlined-location-simple' />}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<MenuItem disabled value=''><em>Location</em></MenuItem>\n\t\t\t\t\t\t\t{Options.map(location => (\n\t\t\t\t\t\t\t\t<MenuItem value={location.id}>{location.main.label}</MenuItem>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t<FormHelperText>Select Location</FormHelperText>\n\t\t\t\t\t</FormControl>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} alignContent='center' justify='center'>\n\t\t\t\t\t<FormControl fullWidth variant='outlined' className={classes.formControl}>\n\t\t\t\t\t\t<InputLabel ref={inputLabel} htmlFor='outlined-issue-simple'>\n\t\t\t\t\t\t\tWhat\n\t\t\t\t\t\t</InputLabel>\n\t\t\t\t\t\t<Select\n\t\t\t\t\t\t\tvalue={values.issue}\n\t\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t\t\tinput={<OutlinedInput labelWidth={labelWidth} name='issue' id='outlined-issue-simple' />}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{/* <MenuItem disabled value=''><em>Issue</em></MenuItem>\n\t\t\t\t\t\t\t{(values.location && url.query.name == 'ic') &&\n\t\t\t\t\t\t\t\t(Options[values.location].sub).map(issue => (\n\t\t\t\t\t\t\t\t\t<MenuItem value={issue.id}>{issue.label}</MenuItem>\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t} */}\n\t\t\t\t\t\t\t{/* {url.query.name == 'maintenance' &&\n\t\t\t\t\t\t\t\t<MenuItem value='0'>Machine Down</MenuItem>\n\t\t\t\t\t\t\t} */}\n\t\t\t\t\t\t</Select>\n\t\t\t\t\t\t<FormHelperText>Select Issue</FormHelperText>\n\t\t\t\t\t</FormControl>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item xs={12} alignContent='center' justify='center'>\n\t\t\t\t\t<Grid component='label' container alignItems='center' justify='center' spacing={1}>\n          \t\t\t\t<Grid item>Schedule</Grid>\n          \t\t\t\t<Grid item alignItems='center'>\n\t\t\t\t\t\t\t<Switch \n\t\t\t\t\t\t\t\tchecked={state.asap}\n\t\t\t\t\t\t\t\tonChange={handleSwitchChange('asap')}\n\t\t\t\t\t\t\t\tvalue='asap'\n\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t/>\n          \t\t\t\t</Grid>\n          \t\t\t\t<Grid item>ASAP</Grid>\n        \t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t\t{state.asap === false && \n\t\t\t\t\t<Grid item xs={12} alignContent='center' justify='center'>\n\t\t\t\t\t\t<MuiPickersUtilsProvider utils={Moment}>\n\t\t\t\t\t\t\t<Grid container justify='space-around'>\n\t\t\t\t\t\t\t\t<DatePicker\n\t\t\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\t\t\tlabel='Choose Date'\n\t\t\t\t\t\t\t\t\tvalue={selectedDate}\n\t\t\t\t\t\t\t\t\tonChange={handleDateChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<TimePicker\n\t\t\t\t\t\t\t\t\tmargin='normal'\n\t\t\t\t\t\t\t\t\tlabel='Choose Time'\n\t\t\t\t\t\t\t\t\tvalue={selectedDate}\n\t\t\t\t\t\t\t\t\tonChange={handleDateChange}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t</MuiPickersUtilsProvider>\n\t\t\t\t\t</Grid>\n\t\t\t\t}\n\t\t\t\t<Grid item xs={12} alignContent='center' justify='center' style={{ marginTop: '25px' }}>\n\t\t\t\t\t<Button \n\t\t\t\t\t\tstyle={{ padding: '15px' }}\n\t\t\t\t\t\tfullWidth\n\t\t\t\t\t\tsize='large'\n\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\tcolor='secondary'\n\t\t\t\t\t>Submit Request</Button>\n\t\t\t\t</Grid>\n\t\t\t</form>\n\t\t</Layout>\n\t)\n}\n\nexport default withRouter(Request)"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAKA;AAYA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AACA;AADA;AATA;AAAA;AACA;AAaA;AAAA;AAEA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AADA;AAOA;AACA;AAFA;AANA;AAAA;AAAA;AACA;AADA;AAWA;AADA;AAVA;AAAA;AAAA;AACA;AAYA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AACA;AACA;AAFA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AACA;AACA;;;;A","sourceRoot":""}
{"ast":null,"code":"import _Map from \"@babel/runtime-corejs2/core-js/map\";\nimport { SheetsRegistry } from 'jss';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { createGenerateClassName } from '@material-ui/styles'; // A theme with custom primary and secondary color.\n// It's optional.\n\nvar theme = createMuiTheme({\n  palette: {\n    common: {\n      black: 'rgba(0, 0, 0, 1)',\n      white: 'rgba(255, 255, 255, 1)'\n    },\n    background: {\n      paper: '#fff',\n      default: '#fafafa'\n    },\n    primary: {\n      light: 'rgba(86, 79, 74, 1)',\n      main: 'rgba(45, 41, 38, 1)',\n      dark: 'rgba(26, 24, 22, 1)',\n      contrastText: '#fff'\n    },\n    secondary: {\n      light: 'rgba(228, 0, 43, 0.78)',\n      main: 'rgba(228, 0, 43, 1)',\n      dark: 'rgba(208, 2, 27, 1)',\n      contrastText: '#fff'\n    },\n    error: {\n      light: '#e57373',\n      main: '#f44336',\n      dark: '#d32f2f',\n      contrastText: '#fff'\n    },\n    text: {\n      primary: 'rgba(0, 0, 0, 0.87)',\n      secondary: 'rgba(0, 0, 0, 0.54)',\n      disabled: 'rgba(0, 0, 0, 0.38)',\n      hint: 'rgba(0, 0, 0, 0.38)'\n    }\n  },\n  button: {\n    margin: '8px'\n  },\n  typography: {\n    useNextVariants: true\n  }\n});\n\nfunction createPageContext() {\n  return {\n    theme: theme,\n    // This is needed in order to deduplicate the injection of CSS in the page.\n    sheetsManager: new _Map(),\n    // This is needed in order to inject the critical CSS.\n    sheetsRegistry: new SheetsRegistry(),\n    // The standard class name generator.\n    generateClassName: createGenerateClassName()\n  };\n}\n\nvar pageContext;\nexport default function getPageContext() {\n  // Make sure to create a new context for every server-side request so that data\n  // isn't shared between connections (which would be bad).\n  if (!process.browser) {\n    return createPageContext();\n  } // Reuse context on the client-side.\n\n\n  if (!pageContext) {\n    pageContext = createPageContext();\n  }\n\n  return pageContext;\n}","map":{"version":3,"sources":["/Users/ctracy/Sites/progress/production/master/src/getPageContext.js"],"names":["SheetsRegistry","createMuiTheme","createGenerateClassName","theme","palette","common","black","white","background","paper","default","primary","light","main","dark","contrastText","secondary","error","text","disabled","hint","button","margin","typography","useNextVariants","createPageContext","sheetsManager","sheetsRegistry","generateClassName","pageContext","getPageContext","process","browser"],"mappings":";AAAA,SAASA,cAAT,QAA+B,KAA/B;AACA,SAASC,cAAT,QAA+B,0BAA/B;AACA,SAASC,uBAAT,QAAwC,qBAAxC,C,CAEA;AACA;;AACA,IAAMC,KAAK,GAAGF,cAAc,CAAC;AACzBG,EAAAA,OAAO,EAAE;AACLC,IAAAA,MAAM,EAAE;AACJC,MAAAA,KAAK,EAAE,kBADH;AAEJC,MAAAA,KAAK,EAAC;AAFF,KADH;AAKLC,IAAAA,UAAU,EAAE;AACRC,MAAAA,KAAK,EAAE,MADC;AAERC,MAAAA,OAAO,EAAC;AAFA,KALP;AASLC,IAAAA,OAAO,EAAE;AACLC,MAAAA,KAAK,EAAE,qBADF;AAELC,MAAAA,IAAI,EAAE,qBAFD;AAGLC,MAAAA,IAAI,EAAE,qBAHD;AAILC,MAAAA,YAAY,EAAC;AAJR,KATJ;AAeLC,IAAAA,SAAS,EAAE;AACPJ,MAAAA,KAAK,EAAE,wBADA;AAEPC,MAAAA,IAAI,EAAE,qBAFC;AAGPC,MAAAA,IAAI,EAAE,qBAHC;AAIPC,MAAAA,YAAY,EAAC;AAJN,KAfN;AAqBLE,IAAAA,KAAK,EAAE;AACHL,MAAAA,KAAK,EAAE,SADJ;AAEHC,MAAAA,IAAI,EAAE,SAFH;AAGHC,MAAAA,IAAI,EAAE,SAHH;AAIHC,MAAAA,YAAY,EAAE;AAJX,KArBF;AA2BLG,IAAAA,IAAI,EAAE;AACFP,MAAAA,OAAO,EAAE,qBADP;AAEFK,MAAAA,SAAS,EAAE,qBAFT;AAGFG,MAAAA,QAAQ,EAAE,qBAHR;AAIFC,MAAAA,IAAI,EAAE;AAJJ;AA3BD,GADgB;AAmCzBC,EAAAA,MAAM,EAAE;AACJC,IAAAA,MAAM,EAAE;AADJ,GAnCiB;AAsCzBC,EAAAA,UAAU,EAAE;AACRC,IAAAA,eAAe,EAAE;AADT;AAtCa,CAAD,CAA5B;;AA2CA,SAASC,iBAAT,GAA6B;AAC3B,SAAO;AACLtB,IAAAA,KAAK,EAALA,KADK;AAEL;AACAuB,IAAAA,aAAa,EAAE,UAHV;AAIL;AACAC,IAAAA,cAAc,EAAE,IAAI3B,cAAJ,EALX;AAML;AACA4B,IAAAA,iBAAiB,EAAE1B,uBAAuB;AAPrC,GAAP;AASD;;AAED,IAAI2B,WAAJ;AAEA,eAAe,SAASC,cAAT,GAA0B;AACvC;AACA;AACA,MAAI,CAACC,OAAO,CAACC,OAAb,EAAsB;AACpB,WAAOP,iBAAiB,EAAxB;AACD,GALsC,CAOvC;;;AACA,MAAI,CAACI,WAAL,EAAkB;AAChBA,IAAAA,WAAW,GAAGJ,iBAAiB,EAA/B;AACD;;AAED,SAAOI,WAAP;AACD","sourcesContent":["import { SheetsRegistry } from 'jss';\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { createGenerateClassName } from '@material-ui/styles';\n\n// A theme with custom primary and secondary color.\n// It's optional.\nconst theme = createMuiTheme({\n    palette: {\n        common: {\n            black: 'rgba(0, 0, 0, 1)',\n            white:'rgba(255, 255, 255, 1)'\n        },\n        background: {\n            paper: '#fff',\n            default:'#fafafa'\n        },\n        primary: {\n            light: 'rgba(86, 79, 74, 1)',\n            main: 'rgba(45, 41, 38, 1)',\n            dark: 'rgba(26, 24, 22, 1)',\n            contrastText:'#fff'\n        },\n        secondary: {\n            light: 'rgba(228, 0, 43, 0.78)',\n            main: 'rgba(228, 0, 43, 1)',\n            dark: 'rgba(208, 2, 27, 1)',\n            contrastText:'#fff'\n        },\n        error: {\n            light: '#e57373',\n            main: '#f44336',\n            dark: '#d32f2f',\n            contrastText: '#fff'\n        },\n        text: {\n            primary: 'rgba(0, 0, 0, 0.87)',\n            secondary: 'rgba(0, 0, 0, 0.54)',\n            disabled: 'rgba(0, 0, 0, 0.38)',\n            hint: 'rgba(0, 0, 0, 0.38)'\n        }\n    },\n    button: {\n        margin: '8px',\n    },\n    typography: {\n        useNextVariants: true,\n    },\n});\n\nfunction createPageContext() {\n  return {\n    theme,\n    // This is needed in order to deduplicate the injection of CSS in the page.\n    sheetsManager: new Map(),\n    // This is needed in order to inject the critical CSS.\n    sheetsRegistry: new SheetsRegistry(),\n    // The standard class name generator.\n    generateClassName: createGenerateClassName(),\n  };\n}\n\nlet pageContext;\n\nexport default function getPageContext() {\n  // Make sure to create a new context for every server-side request so that data\n  // isn't shared between connections (which would be bad).\n  if (!process.browser) {\n    return createPageContext();\n  }\n\n  // Reuse context on the client-side.\n  if (!pageContext) {\n    pageContext = createPageContext();\n  }\n\n  return pageContext;\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/ctracy/Sites/progress/production/master/pages/_document.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n      height: 100%;\\n    \"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n      position: relative;\\n      height: 100vh;\\n    \"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport Document, { Head, Main, NextScript } from 'next/document';\nimport { Container, CssBaseline, Grid } from '@material-ui/core';\nimport styled from 'styled-components';\nimport flush from 'styled-jsx/server';\n\nvar MyDocument =\n/*#__PURE__*/\nfunction (_Document) {\n  _inherits(MyDocument, _Document);\n\n  function MyDocument() {\n    _classCallCheck(this, MyDocument);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyDocument).apply(this, arguments));\n  }\n\n  _createClass(MyDocument, [{\n    key: \"render\",\n    value: function render() {\n      var MainContainer = styled(Container)(_templateObject());\n      var MainGrid = styled(Grid)(_templateObject2());\n      var pageContext = this.props.pageContext;\n      return React.createElement(\"html\", {\n        lang: \"en\",\n        dir: \"ltr\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(Head, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"meta\", {\n        charSet: \"utf-8\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }), React.createElement(\"meta\", {\n        name: \"viewport\",\n        content: \"minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }), React.createElement(\"meta\", {\n        name: \"theme-color\",\n        content: pageContext ? pageContext.theme.palette.primary.main : null,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }), React.createElement(\"link\", {\n        rel: \"stylesheet\",\n        href: \"https://fonts.googleapis.com/css?family=Roboto:300,400,500\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      })), React.createElement(\"body\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(MainContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(CssBaseline, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }), React.createElement(MainGrid, {\n        container: true,\n        spacing: 2,\n        alignContent: \"center\",\n        alignItems: \"center\",\n        justify: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(Main, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }), React.createElement(NextScript, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      })))));\n    }\n  }]);\n\n  return MyDocument;\n}(Document);\n\nMyDocument.getInitialProps = function (ctx) {\n  // Resolution order\n  //\n  // On the server:\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. document.getInitialProps\n  // 4. app.render\n  // 5. page.render\n  // 6. document.render\n  //\n  // On the server with error:\n  // 1. document.getInitialProps\n  // 2. app.render\n  // 3. page.render\n  // 4. document.render\n  //\n  // On the client\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. app.render\n  // 4. page.render\n  // Render app and page and get the context of the page with collected side effects.\n  var pageContext;\n  var page = ctx.renderPage(function (Component) {\n    var WrappedComponent = function WrappedComponent(props) {\n      pageContext = props.pageContext;\n      return React.createElement(Component, _extends({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }));\n    };\n\n    WrappedComponent.propTypes = {\n      pageContext: PropTypes.object.isRequired\n    };\n    return WrappedComponent;\n  });\n  var css; // It might be undefined, e.g. after an error.\n\n  if (pageContext) {\n    css = pageContext.sheetsRegistry.toString();\n  }\n\n  return _objectSpread({}, page, {\n    pageContext: pageContext,\n    // Styles fragment is rendered after the app and page rendering finish.\n    styles: React.createElement(React.Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(\"style\", {\n      id: \"jss-server-side\" // eslint-disable-next-line react/no-danger\n      ,\n      dangerouslySetInnerHTML: {\n        __html: css\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }), flush() || null)\n  });\n};\n\nexport default MyDocument;","map":{"version":3,"sources":["/Users/ctracy/Sites/progress/production/master/pages/_document.js"],"names":["React","PropTypes","Document","Head","Main","NextScript","Container","CssBaseline","Grid","styled","flush","MyDocument","MainContainer","MainGrid","pageContext","props","theme","palette","primary","main","getInitialProps","ctx","page","renderPage","Component","WrappedComponent","propTypes","object","isRequired","css","sheetsRegistry","toString","styles","__html"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,QAAP,IAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,UAA/B,QAAiD,eAAjD;AACA,SAASC,SAAT,EAAoBC,WAApB,EAAiCC,IAAjC,QAA6C,mBAA7C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,MAAkB,mBAAlB;;IAEMC,U;;;;;;;;;;;;;6BACK;AACP,UAAMC,aAAa,GAAGH,MAAM,CAACH,SAAD,CAAT,mBAAnB;AAKA,UAAMO,QAAQ,GAAGJ,MAAM,CAACD,IAAD,CAAT,oBAAd;AANO,UAUCM,WAVD,GAUiB,KAAKC,KAVtB,CAUCD,WAVD;AAYP,aACE;AAAM,QAAA,IAAI,EAAC,IAAX;AAAgB,QAAA,GAAG,EAAC,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAM,QAAA,OAAO,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,OAAO,EAAC,wEAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFF,EAME;AACE,QAAA,IAAI,EAAC,aADP;AAEE,QAAA,OAAO,EAAEA,WAAW,GAAGA,WAAW,CAACE,KAAZ,CAAkBC,OAAlB,CAA0BC,OAA1B,CAAkCC,IAArC,GAA4C,IAFlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANF,EAUE;AACE,QAAA,GAAG,EAAC,YADN;AAEE,QAAA,IAAI,EAAC,4DAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAVF,CADF,EAgBE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,oBAAC,QAAD;AACE,QAAA,SAAS,MADX;AAEE,QAAA,OAAO,EAAE,CAFX;AAGE,QAAA,YAAY,EAAC,QAHf;AAIE,QAAA,UAAU,EAAC,QAJb;AAKE,QAAA,OAAO,EAAC,QALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAOA,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPA,EAQA,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARA,CAFF,CADA,CAhBF,CADF;AAkCD;;;;EA/CsBjB,Q;;AAkDzBS,UAAU,CAACS,eAAX,GAA6B,UAAAC,GAAG,EAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,MAAIP,WAAJ;AACA,MAAMQ,IAAI,GAAGD,GAAG,CAACE,UAAJ,CAAe,UAAAC,SAAS,EAAI;AACvC,QAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAAV,KAAK,EAAI;AAChCD,MAAAA,WAAW,GAAGC,KAAK,CAACD,WAApB;AACA,aAAO,oBAAC,SAAD,eAAeC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACD,KAHD;;AAKAU,IAAAA,gBAAgB,CAACC,SAAjB,GAA6B;AAC3BZ,MAAAA,WAAW,EAAEb,SAAS,CAAC0B,MAAV,CAAiBC;AADH,KAA7B;AAIA,WAAOH,gBAAP;AACD,GAXY,CAAb;AAaA,MAAII,GAAJ,CAtCkC,CAuClC;;AACA,MAAIf,WAAJ,EAAiB;AACfe,IAAAA,GAAG,GAAGf,WAAW,CAACgB,cAAZ,CAA2BC,QAA3B,EAAN;AACD;;AAED,2BACKT,IADL;AAEER,IAAAA,WAAW,EAAXA,WAFF;AAGE;AACAkB,IAAAA,MAAM,EACJ,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,EAAE,EAAC,iBADL,CAEE;AAFF;AAGE,MAAA,uBAAuB,EAAE;AAAEC,QAAAA,MAAM,EAAEJ;AAAV,OAH3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAMGnB,KAAK,MAAM,IANd;AALJ;AAeD,CA3DD;;AA6DA,eAAeC,UAAf","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Document, { Head, Main, NextScript } from 'next/document';\nimport { Container, CssBaseline, Grid } from '@material-ui/core';\nimport styled from 'styled-components';\nimport flush from 'styled-jsx/server';\n\nclass MyDocument extends Document {\n  render() {\n    const MainContainer = styled(Container)`\n      position: relative;\n      height: 100vh;\n    `;\n\n    const MainGrid = styled(Grid)`\n      height: 100%;\n    `;\n    \n    const { pageContext } = this.props;\n\n    return (\n      <html lang=\"en\" dir=\"ltr\">\n        <Head>\n          <meta charSet=\"utf-8\" />\n          <meta\n            name=\"viewport\"\n            content=\"minimum-scale=1, initial-scale=1, width=device-width, shrink-to-fit=no\"\n          />\n          <meta\n            name=\"theme-color\"\n            content={pageContext ? pageContext.theme.palette.primary.main : null}\n          />\n          <link\n            rel=\"stylesheet\"\n            href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500\"\n          />\n        </Head>\n        <body>\n        <MainContainer>\n          <CssBaseline />\n          <MainGrid\n            container\n            spacing={2}\n            alignContent=\"center\"\n            alignItems=\"center\"\n            justify=\"center\"\n          >\n          <Main />\n          <NextScript />\n          </MainGrid>\n        </MainContainer>          \n        </body>\n      </html>\n    );\n  }\n}\n\nMyDocument.getInitialProps = ctx => {\n  // Resolution order\n  //\n  // On the server:\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. document.getInitialProps\n  // 4. app.render\n  // 5. page.render\n  // 6. document.render\n  //\n  // On the server with error:\n  // 1. document.getInitialProps\n  // 2. app.render\n  // 3. page.render\n  // 4. document.render\n  //\n  // On the client\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. app.render\n  // 4. page.render\n\n  // Render app and page and get the context of the page with collected side effects.\n  let pageContext;\n  const page = ctx.renderPage(Component => {\n    const WrappedComponent = props => {\n      pageContext = props.pageContext;\n      return <Component {...props} />;\n    };\n\n    WrappedComponent.propTypes = {\n      pageContext: PropTypes.object.isRequired,\n    };\n\n    return WrappedComponent;\n  });\n\n  let css;\n  // It might be undefined, e.g. after an error.\n  if (pageContext) {\n    css = pageContext.sheetsRegistry.toString();\n  }\n\n  return {\n    ...page,\n    pageContext,\n    // Styles fragment is rendered after the app and page rendering finish.\n    styles: (\n      <React.Fragment>\n        <style\n          id=\"jss-server-side\"\n          // eslint-disable-next-line react/no-danger\n          dangerouslySetInnerHTML={{ __html: css }}\n        />\n        {flush() || null}\n      </React.Fragment>\n    ),\n  };\n};\n\nexport default MyDocument;"]},"metadata":{},"sourceType":"module"}